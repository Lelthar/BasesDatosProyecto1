/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import java.sql.SQLException;
import javax.swing.JOptionPane;
import proyectobd1.Singleton;
import proyectobd1.Tabla;

/**
 *
 * @author mailon2
 */
public class VentanaInterseccion extends javax.swing.JFrame {
    
    OperacionesAlgebraRelacional ventanaMain;
    /**
     * Creates new form VentanaProductoCartesiano
     */
    public VentanaInterseccion() {
        initComponents();
    }
    
    public VentanaInterseccion(OperacionesAlgebraRelacional ventana){
        initComponents();
        this.ventanaMain = ventana;
        this.setTitle("Realización de Intersección");
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonSalir = new javax.swing.JButton();
        jButtonEjec = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldTabla1 = new javax.swing.JTextField();
        jTextFieldTabla2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldResul = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableResul = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaAlg = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaSql = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonSalir.setText("Atras");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jButtonEjec.setText("Ejecutar");
        jButtonEjec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEjecActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre tabla 1: ");

        jLabel2.setText("Nombre tabla 2:");

        jLabel3.setText("Tabla resultante:");

        jTableResul.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableResul);

        jTextAreaAlg.setColumns(20);
        jTextAreaAlg.setRows(5);
        jScrollPane3.setViewportView(jTextAreaAlg);

        jLabel5.setText("Equivalente en Álgebra Relacional:");

        jLabel4.setText("Equivalente en SQL:");

        jTextAreaSql.setColumns(20);
        jTextAreaSql.setRows(5);
        jScrollPane2.setViewportView(jTextAreaSql);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonSalir)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldResul, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButtonEjec)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextFieldTabla1)
                                            .addComponent(jTextFieldTabla2, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))))))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(349, 349, 349)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSalir)
                            .addComponent(jButtonEjec))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldTabla1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldTabla2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldResul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.ventanaMain.setVisible(true);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonEjecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEjecActionPerformed
        // TODO add your handling code here:
        //if(jTextFieldTabla1.getText().equals(jTextFieldTabla2.getText())){
          //  JOptionPane.showMessageDialog(this, "Error las tablas no pueden ser iguales "
            //        , "Tablas iguales", JOptionPane.ERROR_MESSAGE);
        //}else{
            if(!jTextFieldResul.getText().isEmpty()){
                if(Singleton.getInstance().getConexionServidor().existeTablaP(jTextFieldTabla1.getText())){
                    if(Singleton.getInstance().getConexionServidor().existeTablaP(jTextFieldTabla2.getText())){
                        if((Singleton.getInstance().getConexionServidor().existeTablaP(jTextFieldResul.getText()) != true) && 
                        (Singleton.getInstance().getConexionServidor().esTablaTemporalP(jTextFieldResul.getText()) != true)){
                            int t1 = Singleton.getInstance().getConexionServidor().obtenerAtributos(jTextFieldTabla1.getText()).size();
                            int t2 = Singleton.getInstance().getConexionServidor().obtenerAtributos(jTextFieldTabla2.getText()).size();
                            if(t1 == t2){
                                try {
                                    String nombreTabla1;
                                    if(Singleton.getInstance().getConexionServidor().esTablaTemporalP(jTextFieldTabla1.getText())){
                                        nombreTabla1 = "#"+jTextFieldTabla1.getText();
                                    }else{
                                        nombreTabla1 = jTextFieldTabla1.getText();
                                    }
                                    String nombreTabla2;
                                    if(Singleton.getInstance().getConexionServidor().esTablaTemporalP(jTextFieldTabla2.getText())){
                                        nombreTabla2 = "#"+jTextFieldTabla2.getText();
                                    }else{
                                        nombreTabla2 = jTextFieldTabla2.getText();
                                    }

                                    Singleton.getInstance().getConexionServidor().realizarInstruccionSql(1,"SELECT * INTO  #"+jTextFieldResul.getText()+" FROM "+nombreTabla1+" INTERSECT SELECT * FROM " +nombreTabla2);
                                    //Singleton.getInstance().getConexionServidor().realizarInstruccionSql(0,"SELECT * FROM #"+jTextFieldResul.getText());
                                    //Singleton.getInstance().getConexionServidor().setRs(null);

                                    String consulta = "SELECT * FROM #"+jTextFieldResul.getText();

                                    Singleton.getInstance().getConexionServidor().realizarInstruccionSql(0,consulta);
                                    Tabla nuevaTabla = new Tabla(jTextFieldResul.getText(),true,Singleton.getInstance().getConexionServidor().convertirVector2ArrayList(Singleton.getInstance().getConexionServidor().atributosCosulta()));
                                    Singleton.getInstance().getConexionServidor().agregarNombreTabla(nuevaTabla);

                                    //Singleton.getInstance().getAdministrador().tablaInterseccion(this);
                                    String int1="SELECT * FROM " + jTextFieldTabla1.getText();
                                    String int2="SELECT * FROM " + jTextFieldTabla1.getText();
                                    String consult = int1 +"\n INTERSECT \n"+int2;
                                    String algebra = "( "+jTextFieldTabla1.getText()+" ∩ "+jTextFieldTabla1.getText()+" )";
                                    this.jTextAreaSql.setText(consult);
                                    this.jTextAreaAlg.setText(algebra);

                                } catch (SQLException ex) {
                                    JOptionPane.showMessageDialog(this, "Ocurrio algun error inesperado durante"
                                            +" la ejecución", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                                }
                            }else{
                                JOptionPane.showMessageDialog(this, "Las tablas no tiene la misma aridad, la tabla "
                                            +jTextFieldTabla1.getText()+" tiene aridad: "+t1
                                            +" y la tabla: "+jTextFieldTabla2.getText()+" tiene  aridad: "+t2, "Diferente Aridad", JOptionPane.ERROR_MESSAGE);
                            }
                        }else{
                            String tabla = jTextFieldResul.getText();
                            JOptionPane.showMessageDialog(this, "Error el nombre para el resultado de la tabla: "
                                +tabla+" ya existe", "Existencia de la tabla resultado", JOptionPane.ERROR_MESSAGE);
                        }
                    }else{
                        String tabla = jTextFieldTabla2.getText();
                        JOptionPane.showMessageDialog(this, "Error la tabla 2: "
                                +tabla+" no existe.", "No existe tabla", JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    String tabla = jTextFieldTabla1.getText();
                    JOptionPane.showMessageDialog(this, "Error la tabla 1: "
                            +tabla+" no existe.", "No existe tabla", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                if(Singleton.getInstance().getConexionServidor().existeTablaP(jTextFieldTabla1.getText())){
                    if(Singleton.getInstance().getConexionServidor().existeTablaP(jTextFieldTabla2.getText())){
                        int t1 = Singleton.getInstance().getConexionServidor().obtenerAtributos(jTextFieldTabla1.getText()).size();
                        int t2 = Singleton.getInstance().getConexionServidor().obtenerAtributos(jTextFieldTabla2.getText()).size();
                        if(t1 == t2){
                            try {
                                String nombreTabla1;
                                if(Singleton.getInstance().getConexionServidor().esTablaTemporalP(jTextFieldTabla1.getText())){
                                    nombreTabla1 = "#"+jTextFieldTabla1.getText();
                                }else{
                                    nombreTabla1 = jTextFieldTabla1.getText();
                                }
                                String nombreTabla2;
                                if(Singleton.getInstance().getConexionServidor().esTablaTemporalP(jTextFieldTabla2.getText())){
                                    nombreTabla2 = "#"+jTextFieldTabla2.getText();
                                }else{
                                    nombreTabla2 = jTextFieldTabla2.getText();
                                }
                                String int1="SELECT * FROM " + jTextFieldTabla1.getText();
                                String int2="SELECT * FROM " + jTextFieldTabla2.getText();
                                String consultA = int1 +"\n INTERSECT \n"+int2; 
                                String consult = "SELECT * FROM "+nombreTabla1+" intersect SELECT * FROM "+ nombreTabla2;
                                String algebra = "( "+int1+" ∩ "+int2+" )";
                                Singleton.getInstance().getConexionServidor().realizarInstruccionSql(0,consult);
                                //Singleton.getInstance().getAdministrador().tablaInterseccion(this);
                                this.jTextAreaSql.setText(consultA);
                                this.jTextAreaAlg.setText(algebra);

                            } catch (SQLException ex) {
                                JOptionPane.showMessageDialog(this, "Ocurrio algun error inesperado durante"
                                        +" la ejecución", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                            }
                        }else{
                            JOptionPane.showMessageDialog(this, "Las tablas no tiene la misma aridad, la tabla "
                                            +jTextFieldTabla1.getText()+" tiene aridad: "+t1
                                            +" y la tabla: "+jTextFieldTabla2.getText()+" tiene  aridad: "+t2, "Diferente Aridad", JOptionPane.ERROR_MESSAGE);
                        }
                    }else{
                        String tabla = jTextFieldTabla2.getText();
                        JOptionPane.showMessageDialog(this, "Error la tabla 2: "
                                +tabla+" no existe.", "No existe tabla", JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    String tabla = jTextFieldTabla1.getText();
                    JOptionPane.showMessageDialog(this, "Error la tabla 1: "
                            +tabla+" no existe.", "No existe tabla", JOptionPane.ERROR_MESSAGE);
                }
            }
        //}
    }//GEN-LAST:event_jButtonEjecActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaInterseccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaInterseccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaInterseccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaInterseccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaInterseccion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEjec;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTable jTableResul;
    private javax.swing.JTextArea jTextAreaAlg;
    private javax.swing.JTextArea jTextAreaSql;
    private javax.swing.JTextField jTextFieldResul;
    private javax.swing.JTextField jTextFieldTabla1;
    private javax.swing.JTextField jTextFieldTabla2;
    // End of variables declaration//GEN-END:variables
}
