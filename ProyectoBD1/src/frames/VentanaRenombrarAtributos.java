/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import proyectobd1.Singleton;
import proyectobd1.Tabla;

/**
 *
 * @author Gerald
 */
public class VentanaRenombrarAtributos extends javax.swing.JFrame {

    OperacionesAlgebraRelacional ventanaOperaciones;
    /**
     * Creates new form VentanaSeleccion
     */
    public VentanaRenombrarAtributos(OperacionesAlgebraRelacional pVentanaOperaciones) {
        initComponents();
        this.ventanaOperaciones = pVentanaOperaciones;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ejecutarBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txfNombreAtributos = new javax.swing.JTextField();
        txfNombreTabla = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txfTablaResultado = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txAResultAlgebraR = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txAResultSql = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableResultado = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ejecutarBtn.setText("Ejecutar");
        ejecutarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejecutarBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre Tabla : ");

        jLabel2.setText("Nombre de Atributos:");

        jLabel3.setText("Tabla resultado: ");

        jButton1.setText("Atras");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txAResultAlgebraR.setColumns(20);
        txAResultAlgebraR.setRows(5);
        jScrollPane2.setViewportView(txAResultAlgebraR);

        txAResultSql.setColumns(20);
        txAResultSql.setRows(5);
        jScrollPane3.setViewportView(txAResultSql);

        jLabel4.setText("Equivalente en SQL");

        jLabel5.setText("Equivalente en √Ålgebra Relacional");

        jTableResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTableResultado);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(133, 133, 133)
                                    .addComponent(ejecutarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(txfNombreAtributos, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(44, 44, 44)
                                    .addComponent(txfTablaResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txfNombreTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 741, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(ejecutarBtn))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txfNombreTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txfNombreAtributos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txfTablaResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ejecutarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejecutarBtnActionPerformed
        // TODO add your handling code here:
        if(Singleton.getInstance().getConexionServidor().existeTablaP(txfNombreTabla.getText())){
            if(!txfTablaResultado.getText().isEmpty()){
                ArrayList<String> listaNombresAtributos = Singleton.getInstance().getConexionServidor().listaAtributosString(txfNombreAtributos.getText());
                if(Singleton.getInstance().getConexionServidor().cantidadAtributos(txfNombreTabla.getText()) == listaNombresAtributos.size()){
                    if(!Singleton.getInstance().getConexionServidor().existeTablaP(txfTablaResultado.getText())){
                        try {
                            
                            String select = Singleton.getInstance().getConexionServidor().obtenerSelectConsulta(Singleton.getInstance().getConexionServidor().obtenerAtributos(txfNombreTabla.getText()), listaNombresAtributos);
                            String nombreTabla;
                           
                            if(Singleton.getInstance().getConexionServidor().esTablaTemporalP(txfNombreTabla.getText())){
                                nombreTabla = "#"+txfNombreTabla.getText();
                            }else{
                                nombreTabla = txfNombreTabla.getText();
                            }  
                            
                            Singleton.getInstance().getConexionServidor().realizarInstruccionSql(1,"SELECT " +select+ " INTO  #"+txfTablaResultado.getText()+" FROM "+nombreTabla);
                            //Singleton.getInstance().getConexionServidor().realizarInstruccionSql(0,"SELECT * FROM #"+txfTablaResultado.getText());
                            
                            Singleton.getInstance().getConexionServidor().renombrarTabla(txfNombreTabla.getText(), txfTablaResultado.getText(), listaNombresAtributos);
                            Singleton.getInstance().getConexionServidor().setRs(null);
                            String consulta = "SELECT * FROM #"+txfTablaResultado.getText();
                            Singleton.getInstance().getConexionServidor().realizarInstruccionSql(0, consulta);
                            //Funcion que hace la llamada para ver en la interfaz
                            Singleton.getInstance().getAdministrador().tablaRenombrarAtributos(this);

                            String consultaSql = "SELECT "+select+"  INTO "+txfNombreTabla.getText()+" FROM "+txfNombreTabla.getText();
                            String consultaAlgebra = txfTablaResultado.getText()+"<- "+select+" ("+txfNombreTabla.getText()+")";

                            txAResultSql.setText(consultaSql);
                            txAResultAlgebraR.setText(consultaAlgebra);
                        } catch (SQLException ex) {
                            //Logger.getLogger(VentanaUnion.class.getName()).log(Level.SEVERE, null, ex);
                            JOptionPane.showMessageDialog(this, "Introdujo uno de los valores mal", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "La tabla resultado ya existe, por favor digite una diferente", "Error de tabla resultado", JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "La cantidad de atributos no coindice con la cantidad de la tabla", "Diferente cantidad de atributos", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                ArrayList<String> listaNombresAtributos = Singleton.getInstance().getConexionServidor().listaAtributosString(txfNombreAtributos.getText());
                if(Singleton.getInstance().getConexionServidor().cantidadAtributos(txfNombreTabla.getText()) == listaNombresAtributos.size()){
                    if(Singleton.getInstance().getConexionServidor().esTablaTemporalP(txfNombreTabla.getText())){
                        try {                            
                            String select = Singleton.getInstance().getConexionServidor().obtenerSelectConsulta(Singleton.getInstance().getConexionServidor().obtenerAtributos(txfNombreTabla.getText()), listaNombresAtributos);
                            Singleton.getInstance().getConexionServidor().realizarInstruccionSql(1,"SELECT " +select+ " INTO  #temporalPruebaX1 "+" FROM #"+txfNombreTabla.getText());
                            
                            Singleton.getInstance().getConexionServidor().realizarInstruccionSql(1,"DROP TABLE #"+txfNombreTabla.getText());
                            
                            Singleton.getInstance().getConexionServidor().realizarInstruccionSql(1,"SELECT * INTO  #"+txfNombreTabla.getText()+" FROM #temporalPruebaX1");
                            Singleton.getInstance().getConexionServidor().realizarInstruccionSql(1,"DROP TABLE #temporalPruebaX1");
                            //Singleton.getInstance().getConexionServidor().realizarInstruccionSql(0,"SELECT * FROM #"+txfTablaResultado.getText());
                            
                            Singleton.getInstance().getConexionServidor().renombrarTabla(txfNombreTabla.getText(), txfNombreTabla.getText(), listaNombresAtributos);
                            
                            Singleton.getInstance().getConexionServidor().setRs(null);
                            String consulta = "SELECT * FROM #"+txfNombreTabla.getText();
                            Singleton.getInstance().getConexionServidor().realizarInstruccionSql(0, consulta);
                            //Funcion que hace la llamada para ver en la interfaz
                            Singleton.getInstance().getAdministrador().tablaRenombrarAtributos(this);
                            
                            String consultaSql = "SELECT "+select+"  INTO "+txfNombreTabla.getText()+" FROM "+txfNombreTabla.getText();
                            String consultaAlgebra = txfTablaResultado.getText()+"<- "+select+" ("+txfNombreTabla.getText()+")";

                            txAResultSql.setText(consultaSql);
                            txAResultAlgebraR.setText(consultaAlgebra);
                        } catch (SQLException ex) {
                            //Logger.getLogger(VentanaUnion.class.getName()).log(Level.SEVERE, null, ex);
                            JOptionPane.showMessageDialog(this, "Introdujo uno de los valores mal", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                        }
                                
                    }else{
                        try {
                            
                            String select = Singleton.getInstance().getConexionServidor().obtenerSelectConsulta(Singleton.getInstance().getConexionServidor().obtenerAtributos(txfNombreTabla.getText()), listaNombresAtributos);
                            Singleton.getInstance().getConexionServidor().realizarInstruccionSql(1,"SELECT " +select+ " INTO #"+txfNombreTabla.getText()+" FROM "+txfNombreTabla.getText());
                            
                            Singleton.getInstance().getConexionServidor().renombrarTabla(txfNombreTabla.getText(), txfNombreTabla.getText(), listaNombresAtributos);
                           
                            Singleton.getInstance().getConexionServidor().setRs(null);
                            String consulta = "SELECT * FROM #"+txfNombreTabla.getText();
                            Singleton.getInstance().getConexionServidor().realizarInstruccionSql(0, consulta);
                            //Funcion que hace la llamada para ver en la interfaz
                            
                            Singleton.getInstance().getAdministrador().tablaRenombrarAtributos(this);

                            String consultaSql = "SELECT "+select+"  INTO "+txfNombreTabla.getText()+" FROM "+txfNombreTabla.getText();
                            String consultaAlgebra = txfTablaResultado.getText()+"<- "+select+" ("+txfNombreTabla.getText()+")";

                            txAResultSql.setText(consultaSql);
                            txAResultAlgebraR.setText(consultaAlgebra);
                        } catch (SQLException ex) {
                            //Logger.getLogger(VentanaUnion.class.getName()).log(Level.SEVERE, null, ex);
                            JOptionPane.showMessageDialog(this, "Introdujo uno de los valores mal", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                        }
                            
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "La cantidad de atributos no coindice con la cantidad de la tabla", "Diferente cantidad de atributos", JOptionPane.ERROR_MESSAGE);
                }          
            }
        }else{
            JOptionPane.showMessageDialog(this, "La tabla que introdujo, no existe", "Tabla no existe", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ejecutarBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.ventanaOperaciones.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ejecutarBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    public javax.swing.JTable jTableResultado;
    private javax.swing.JTextArea txAResultAlgebraR;
    private javax.swing.JTextArea txAResultSql;
    private javax.swing.JTextField txfNombreAtributos;
    private javax.swing.JTextField txfNombreTabla;
    private javax.swing.JTextField txfTablaResultado;
    // End of variables declaration//GEN-END:variables
}
